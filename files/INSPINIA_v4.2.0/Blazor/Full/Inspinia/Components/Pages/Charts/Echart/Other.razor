@page "/charts-echart-other"
@rendermode InteractiveServer
@inject IJSRuntime JsRuntime;

<div class="container-fluid">

    <PageBreadcrumb Title="Other Echart" SubTitle="Charts" />

    <div class="row">
        <div class="col-xl-6">
            <div class="card">
                <div class="card-header border-0">
                    <h4 class="card-title mb-0">Pictorialbar Dotted Chart</h4>
                </div>
                <div class="card-body p-2 pt-0">
                    <div id="echart-pictorialbar-dotted" class="rounded-3 overflow-hidden" style="min-height:400px">
                    </div>
                </div>
            </div>
            <!-- end card -->
        </div>
        <!-- end col -->
        <div class="col-xl-6">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title mb-0">Basic Sunburst Chart</h4>
                </div>
                <div class="card-body p-2 pt-0">
                    <div id="echar-basic-sunburst" style="min-height:399px"></div>
                </div>
            </div>
            <!-- end card -->
        </div>
        <!-- end col -->

        <div class="col-xl-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title mb-0">Nested Pie Chart</h4>
                </div>
                <div class="card-body">
                    <div id="chart-pie-nest" style="min-height:600px"></div>
                </div>
            </div>
            <!-- end card -->
        </div>
        <!-- end col -->

    </div>
    <!-- end row -->

</div>
<!-- container -->

@code {
    private IJSObjectReference? _module;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _module = await JsRuntime.InvokeAsync<IJSObjectReference>("import", "./js/pages/chart-echart-other.js");
            await JsRuntime.InvokeVoidAsync("loadEchartsOther");
            await JsRuntime.InvokeVoidAsync("loadConfig");
            await JsRuntime.InvokeVoidAsync("loadApps");
        }
    }
}